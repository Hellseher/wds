# File         : wds-python-for-sysamin.org
# Created      : Tue 11 Oct 2016 23:24:38
# Modified     : <2017-12-29 Fri 23:26:57 GMT> Sharlatan
# Author       : sharlatan <sharlatanus@gmail.com>
# Maintainer(s : sharlatan
# Short        : Comparison Python with shell scripting.

#+TITLE: Python for Sysadmins
* Intro
/Main modules and templates  useful for system programming./

On most Linux distributions (Debian, Ubunty, RHL, Fedora, CentOs, etc...) the
easiest way to install additional module is to use Python "module manager": *pip*
See offisial documenataion for [[https://docs.python.org/3/installing/][Installing Python Modules]].

#+BEGIN_EXAMPLE
    $: pip install BeutifullSoup
#+END_EXAMPLE
** Modules
*** Build-in Modules
https://docs.python.org/3/py-modindex.html

- argparse :: module makes it easy to write user-friendly command-line
              interfaces.
- glob :: Unix style pathname pattern expansion
- ipaddress :: /New in version 3.3./ provides the capabilities to create, manipulate and operate on
               IPv4 and IPv6 addresses and networks.
- os ::	Miscellaneous operating system interfaces.
- os.path :: Operations on pathnames.
- platform :: Retrieves as much platform identifying data as possible.
- re :: provides regular expression matching operations similar to those found
        in Perl
- socket :: provides access to the BSD socket interface. It is available on all
            modern Unix systems, Windows, MacOS, and probably additional
            platforms.
- subprocess ::  allows you to spawn new processes, connect to their
                 input/output/error pipes, and obtain their return codes.
- sys :: Access system-specific parameters and functions.
- tarfile :: module makes it possible to read and write tar archives, including
             those using gzip, bz2 and lzma compression.

*** External Modules
- [[https://www.crummy.com/software/BeautifulSoup/][BeutifullSoup]] :: HTML scraping.
- [[http://www.fabfile.org/][Fabric]] :: library and command-line tool for streamlining the use of SSH for
            application deployment or systems administration tasks.
- [[https://pypi.python.org/pypi/netifaces/][netifaces]] :: portable network interface information
- [[http://www.paramiko.org/][Paramiko]]  :: implementation of the SSHv2 protocol, providing both client and
               server functionality.
- [[https://pexpect.readthedocs.io/en/stable/][Pexpect]] :: is a pure Python module for spawning child applications;
             controlling them; and responding to expected patterns in their
             output. Pexpect works like Don Libes’ Expect.
- [[https://pypi.python.org/pypi/psutil][Psutil]] :: a cross-platform process and system utilities module.
- [[http://www.secdev.org/projects/scapy/][Scapy]] :: Scapy is a powerful interactive packet manipulation program. It is
           able to forge or decode packets of a wide number of protocols.
- [[http://docopt.org/][Docopt]] :: Command-line interface description language. Available not just for Python.

** General Templates

/Main template of script file/
#+BEGIN_SRC python
  #!/usr/bin/env python
  # -*- coding: utf-8 -*-
  # Short : << a short description of the script. >>


  def main():
      print("Hello World!")

  if __name__ == '__main__':
      main()

  # End of the script.py
#+END_SRC

Your scrip has to aware of what version is on the system and minimal or exact
required version. Better run it before all main modules will be loaded.

/In script version check to avoid future conflicts/
#+BEGIN_SRC python
  #!/usr/bin/env python
  # -*- coding: utf-8 -*-

  # Version check of Python.

  import sys

  PYMIN = 0x02060000

  if sys.hexversion < PYMIN:
      sys.exit("Python 2.6 or newer is required to run this script.")

  if sys.hexversion != PYMIN:
      sys.exit("Python 2.6 required to run this script.")

  # script body
  # ...
  # end of the script

#+END_SRC
/Check for file/path existance/
#+BEGIN_SRC python
  #!/usr/bin/env python
  # -*- coding: utf-8 -*-

  import os
  import sys


  def exists(path):
      """Test whether a path exists.  Returns False for broken symbolic links"""
      try:
          st = os.stat(path)
      except os.error:
          return False
      return True

  def main():
      if exists("/path/to/file"):
          print "we can proceed"
      else:
          sys.exit('Check if /path/to/file esists. Exit.')

  if __name__ == '__main__':
      main()

  # end of script
#+END_SRC

There are a lot of ways to open a files in Python, here is more reliable more
error-tolerant way I found.

/Open file in Python script/
#+BEGIN_SRC python
  #!/usr/bin/env python
  # -*- coding: utf-8 -*-

  # Read from a file.
  with open('path_to_your_file') as internal_name:
      used_in_script_name = internal_name.read()

  # script body
  # ...
  # Do something with used_in_script_name
  # ...
  # end of the script
#+END_SRC

/Write to file: Example N1/
#+BEGIN_SRC python
  #!/usr/bin/env python
  # -*- coding: utf-8 -*-

  # Write to a file.
  with open('path_to_your_file', 'w') as internal_name:
      internal_name.write("write_your_data_to_file\n")

  # script body
  # ...
  # end of the sript
#+END_SRC

/Write to file: Example N2/
#+BEGIN_SRC python
  #!/usr/bin/env python
  # -*- coding: utf-8 -*-

  try:
      f = open('path_to_your_file', 'w')
      f.write('write_your_data_to_file\n')
  finally:
      f.close()

  # script body
  # ...
  # end of the script
#+END_SRC

Most of the tasks for system administration need to be done as a root/supper
user on *nix systems.

/Check whether user is a root: Example N1/
#+BEGIN_SRC python
  #!/usr/bin/env python
  # -*- coding: utf-8 -*-

  import os
  import sys


  if not os.getuid() == 0:
      sys.exit("Script must be run as root.")

  # script body
  # ...
  # end of the script
#+END_SRC

/Validate installed modules/
#+BEGIN_SRC python
  #!/usr/bin/env python
  # -*- coding: utf-8 -*-

  try:
      from docopt import docopt
  except ImportError:
      exit("This script requires that 'docopt' is installed:\n sudo pip install \
      docop\n https://github.com/docopt")

  # end of script
#+END_SRC

* Coocbook
** Networking
#+BEGIN_SRC python
  #!/usr/bin/env python3

  import ipaddress as IP
  import sys

  sw_x4_net = sys.argv[2]

  print(sw_x4_net)
#+END_SRC
* Common Packages Comparison
** Linux
*** gnu-core-utils [[https://www.gnu.org/software/coreutils/manual/coreutils.html][*]]

| cmd           | Description                                                               | Python          | in     | out    | Example |
|---------------+---------------------------------------------------------------------------+-----------------+--------+--------+---------|
| cp (1)        | copy files and directories                                                | shutil.copy()   | str    | n/a    |         |
| dd (1)        | convert and copy a file                                                   |                 |        |        | •       |
| df (1)        | report file system disk space usage                                       |                 |        |        | •       |
| du (1)        | estimate file space usage                                                 |                 |        |        | •       |
| id (1)        | print real and effective user and group IDs                               | os.getuid()     | n/a    | int    | •       |
| ln (1)        | make links between files: -s (soft/symbolic)                              | os.symlink()    |        |        |         |
|               | : <with no option> hardlink                                               | os.link()       | str    | n/a    |         |
| ls (1)        | list directory contents                                                   | os.listdir()    | str    | list   | •       |
| mv (1)        | move (rename) files                                                       | os.rename()     | str    | n/a    |         |
| nl (1)        | number lines of files                                                     |                 |        |        |         |
| od (1)        | dump files in octal and other formats                                     |                 |        |        |         |
| pr (1)        | convert text files for printing                                           |                 |        |        |         |
| rm (1)        | remove files or directories                                               | os.remove()     | str    | n/a    |         |
|               | : -rf                                                                     | shutil.rmtree() | str    | n/a    |         |
| tr (1)        | translate or delete characters                                            |                 |        |        |         |
| wc (1)        | print newline, word, and byte counts for each file                        |                 |        |        |         |
| cat (1)       | concatenate files and print on the standard output                        |                 |        |        |         |
| cut (1)       | remove sections from each line of files                                   |                 |        |        |         |
| dir (1)       | list directory contents                                                   |                 |        |        |         |
| env (1)       | run a program in a modified environment                                   | os.environ()    | n/a    | str    | •       |
| fmt (1)       | simple optimal text formatter                                             |                 |        |        |         |
| ptx (1)       | produce a permuted index of file contents                                 |                 |        |        |         |
| pwd (1)       | print name of current-working directory                                   | os.getcwd()     | n/a    | str    | •       |
| seq (1)       | print a sequence of numbers                                               |                 |        |        |         |
| sum (1)       | checksum and count the blocks in a file                                   |                 |        |        |         |
| tac (1)       | concatenate and print files in reverse                                    |                 |        |        |         |
| tee (1)       | read from standard input and write to standard output and files           |                 |        |        |         |
| tty (1)       | print the file name of the terminal connected to standard input           |                 |        |        |         |
| who (1)       | show who is logged on                                                     |                 |        |        |         |
| yes (1)       | output a string repeatedly until killed                                   |                 |        |        |         |
| arch (1)      | print machine hardware name (same as uname - m)                           |                 |        |        |         |
| comm (1)      | compare two sorted files line by line                                     |                 |        |        |         |
| date (1)      | print or set the system date and time                                     |                 |        |        |         |
| echo (1)      | display a line of text                                                    |                 |        |        |         |
| expr (1)      | evaluate expressions                                                      |                 |        |        |         |
| fold (1)      | wrap each input line to fit in specified width                            |                 |        |        |         |
| head (1)      | output the first part of files                                            |                 |        |        |         |
| join (1)      | join lines of two files on a common field                                 |                 |        |        |         |
| link (1)      | call the link function to create a link to a file                         |                 |        |        |         |
| nice (1)      | run a program with modified scheduling priority                           |                 |        |        |         |
| shuf (1)      | generate random permutations                                              |                 |        |        |         |
| sort (1)      | sort lines of text files                                                  |                 |        |        |         |
| stat (1)      | display file or file system status                                        | os.stat()       | str    |        |         |
| stty (1)      | change and print terminal line settings                                   |                 |        |        |         |
| sync (1)      | flush file system buffers                                                 |                 |        |        |         |
| tail (1)      | output the last part of files                                             |                 |        |        |         |
| test (1)      | check file types and compare values                                       |                 |        |        |         |
| true (1)      | do nothing, successfully                                                  | True            | bool   | bool   |         |
| uniq (1)      | report or omit repeated lines                                             |                 |        |        |         |
| vdir (1)      | list directory contents                                                   |                 |        |        |         |
| chcon (1)     | change file SELinux security context                                      |                 |        |        |         |
| chgrp (1)     | change group ownership                                                    |                 |        |        |         |
| chmod (1)     | change file mode bits                                                     |                 |        |        |         |
| chown (1)     | change file owner and group                                               |                 |        |        |         |
| cksum (1)     | checksum and count the bytes in a file                                    |                 |        |        |         |
| false (1)     | do nothing, unsuccessfully                                                | False           | bool   | bool   |         |
| mkdir (1)     | make directories                                                          | os.makedirs()   | str    | n/a    |         |
| mknod (1)     | make block or character special files                                     |                 |        |        |         |
| nohup (1)     | run a command immune to hangups, with output to a non-tty                 |                 |        |        |         |
| nproc (1)     | print the number of processing units available                            |                 |        |        |         |
| paste (1)     | merge lines of files                                                      |                 |        |        |         |
| pinky (1)     | lightweight finger                                                        |                 |        |        |         |
| rmdir (1)     | remove empty directories                                                  | os.rmdir()      | str    | n/a    |         |
| shred (1)     | overwrite a file to hide its contents, and optionally delete it           |                 |        |        |         |
| sleep (1)     | delay for a specified amount of time                                      |                 |        |        |         |
| split (1)     | split a file into pieces                                                  |                 |        |        |         |
| touch (1)     | change file timestamps                                                    |                 |        |        |         |
| tsort (1)     | perform topological sort                                                  |                 |        |        |         |
| uname (1)     | print system information                                                  | platform        | module | module |         |
| users (1)     | print the user names of users currently logged in to the current host     | os.getlogin()   | n/a    | n/a    |         |
| base64 (1)    | base64 encode/decode data and print to standard output                    |                 |        |        |         |
| chroot (1)    | run command or interactive shell with special root directory              |                 |        |        |         |
| csplit (1)    | split a file into sections determined by context lines                    |                 |        |        |         |
| expand (1)    | convert tabs to spaces                                                    |                 |        |        |         |
| factor (1)    | factor numbers                                                            |                 |        |        |         |
| groups (1)    | print the groups a user is in                                             |                 |        |        |         |
| hostid (1)    | print the numeric identifier for the current host                         |                 |        |        |         |
| md5sum (1)    | compute and check MD5 message digest                                      | hashlib         | module | module |         |
| mkfifo (1)    | make FIFOs (named pipes)                                                  |                 |        |        |         |
| mktemp (1)    | create a temporary file or directory                                      |                 |        |        |         |
| numfmt (1)    | Convert numbers from/to huma-readable strings                             |                 |        |        |         |
| printf (1)    | format and print data                                                     |                 |        |        |         |
| runcon (1)    | run command with specified SELinux security context                       |                 |        |        |         |
| stdbuf (1)    | Run COMMAND, with modified buffering operations for its standard streams. |                 |        |        |         |
| unlink (1)    | call the unlink function to remove the specified file                     |                 |        |        |         |
| uptime (1)    | Tell how long the system has been running.                                |                 |        |        |         |
| whoami (1)    | print effective userid                                                    |                 |        |        |         |
| dirname (1)   | strip last component from file name                                       |                 |        |        |         |
| install (1)   | copy files and set attributes                                             |                 |        |        |         |
| logname (1)   | print user's login name                                                   |                 |        |        |         |
| pathchk (1)   | check whether file names are valid or portable                            |                 |        |        |         |
| sha1sum (1)   | compute and check SHA1 message digest                                     | hashlib         | module | module |         |
| timeout (1)   | run a command with a time limit                                           |                 |        |        |         |
| basename (1)  | strip directory and suffix from filenames                                 |                 |        |        |         |
| printenv (1)  | print all or part of environment                                          |                 |        |        |         |
| readlink (1)  | print resolved symbolic links or canonical file names                     |                 |        |        |         |
| realpath (1)  | print the resolved path                                                   |                 |        |        |         |
| truncate (1)  | shrink or extend the size of a file to the specified size                 |                 |        |        |         |
| unexpand (1)  | convert spaces to tabs                                                    |                 |        |        |         |
| dircolors (1) | color setup for ls                                                        |                 |        |        |         |
| sha224sum (1) | compute and check SHA224 message digest                                   | hashlib         | module | module |         |
| sha256sum (1) | compute and check SHA256 message digest                                   | hashlib         | module | module |         |
| sha384sum (1) | compute and check SHA384 message digest                                   |                 |        |        |         |
| sha512sum (1) | compute and check SHA512 message digest                                   | hashlib         | module | module |         |
**** Examples: gnu-core-utiles
*** gnu-bash


| cmd       | Description                                                        | Python        | in          | out  | Example |
|-----------+--------------------------------------------------------------------+---------------+-------------+------+---------|
| .         | Execute commands from a file in the current shell.                 | import        | module name |      |         |
| [ ... ]   | Evaluate conditional expression (synonym "test").                  |               |             |      |         |
| { ... }   | Group commands as a unit.                                          |               |             |      |         |
| ( ... )   |                                                                    |               |             |      |         |
| bg        | Move jobs to the background.                                       |               |             |      |         |
| cd        | Change the shell working directory.                                |               |             |      |         |
| fc        | Display or execute commands from the history list.                 |               |             |      |         |
| fg        | Move job to the foreground.                                        |               |             |      |         |
| if        | Execute commands based on conditional.                             | if            |             |      |         |
| for       | Execute commands for each member in a list.                        | for           |             |      |         |
| let       | Evaluate arithmetic expressions.                                   |               |             |      |         |
| pwd       | Print the name of the current working directory.                   |               |             |      |         |
| set       | Set or unset values of shell options and positional parameters.    |               |             |      |         |
| bind      | Set Readline key bindings and variables.                           |               |             |      |         |
| case      | Execute commands based on pattern matching.                        | elif          |             |      |         |
| dirs      | Display directory stack.                                           |               |             |      |         |
| echo      | Write arguments to the standard output.                            | print         |             |      |         |
| eval      | Execute arguments as a shell command.                              |               |             |      |         |
| exec      | Replace the shell with the given command.                          |               |             |      |         |
| exit      | Exit the shell.                                                    |               |             |      |         |
| hash      | Remember or display program locations.                             |               |             |      |         |
| help      | Display information about builtin commands.                        |               |             |      |         |
| jobs      | Display status of jobs.                                            |               |             |      |         |
| kill      | Send a signal to a job.                                            | os.kill()     | int         | n/a  |         |
| popd      | Remove directories from stack.                                     |               |             |      |         |
| read      | Read a line from the standard input and split it into fields.      |               |             |      |         |
| test      | Evaluate conditional expression.                                   |               |             |      |         |
| time      | Report time consumed by pipeline's execution.                      |               |             |      |         |
| trap      | Trap signals and other events.                                     |               |             |      |         |
| type      | Display information about command type.                            |               |             |      |         |
| wait      | Wait for job completion and return exit status.                    |               |             |      |         |
| alias     | Define or display aliases.                                         |               |             |      |         |
| break     | Exit for, while, or until loops.                                   |               |             |      |         |
| false     | Return an unsuccessful result.                                     | False         | bool        | boll |         |
| local     | Define local variables.                                            |               |             |      |         |
| pushd     | Add directories to stack.                                          |               |             |      |         |
| shift     | Shift positional parameters.                                       |               |             |      |         |
| shopt     | Set and unset shell options.                                       |               |             |      |         |
| times     | Display process times.                                             |               |             |      |         |
| umask     | Display or set file mode mask.                                     |               |             |      |         |
| unset     | Unset values and attributes of shell variables and functions.      |               |             |      |         |
| until     | Execute commands as long as a test does not succeed.               |               |             |      |         |
| while     | Execute commands as long as a test succeeds.                       | while         |             |      |         |
| caller    | Return the context of the current subroutine call.                 |               |             |      |         |
| coproc    | Create a coprocess named NAME.                                     |               |             |      |         |
| disown    | Remove jobs from current shell.                                    |               |             |      |         |
| enable    | Enable and disable shell builtins.                                 |               |             |      |         |
| export    | Set export attribute for shell variables.                          |               |             |      |         |
| logout    | Exit a login shell.                                                |               |             |      |         |
| printf    | Formats and prints ARGUMENTS under control of the FORMAT.          | print, format |             |      |         |
| return    | Return from a shell function.                                      |               |             |      |         |
| select    | Select words from a list and execute commands.                     |               |             |      |         |
| source    | Execute commands from a file in the current shell.                 |  import       |             |      |         |
| ulimit    | Modify shell resource limits.                                      |               |             |      |         |
| builtin   | Execute shell builtins.                                            |               |             |      |         |
| command   | Execute a simple command or display information about commands.    |               |             |      |         |
| compgen   | Display possible completions depending on the options.             |               |             |      |         |
| compopt   | Modify or display completion options.                              |               |             |      |         |
| declare   | Set variable values and attributes.                                |               |             |      |         |
| getopts   | Parse option arguments.                                            |               |             |      |         |
| history   | Display or manipulate the history list.                            |               |             |      |         |
| mapfile   | Read lines from the standard input into an indexed array variable. |               |             |      |         |
| suspend   | Suspend shell execution.                                           |               |             |      |         |
| typeset   | Set variable values and attributes.                                |               |             |      |         |
| typeset   | Set variable values and attributes.                                |               |             |      |         |
| unalias   | Remove each NAME from the list of defined aliases.                 |               |             |      |         |
| complete  | Specify how arguments are to be completed by Readline.             |               |             |      |         |
| continue  | Resume for, while, or until loops.                                 |               |             |      |         |
| function  | Define shell function.                                             |               |             |      |         |
| readonly  | Mark shell variables as unchangeable.                              |               |             |      |         |
| readonly  | Mark shell variables as unchangeable.                              |               |             |      |         |
| readarray | Read lines from a file into an array variable.                     |               |             |      |         |
| readarray | Read lines from a file into an array variable.                     |               |             |      |         |
| variables | Common shell variable names and usage.                             |               |             |      |         |
|           |                                                                    |               |             |      |         |

*** utils-linux
* References
** Books
+ Noah Gift and Jeremy M. Jones
  *Python for Unix and Linux System Administration*
  O'Reilly 2008
** Links
+ Python documentation https://docs.python.org/
+ IPython Interactive Computing https://www.ipython.org
+ Code Like a Pythonista: Idiomatic Python http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html#module-structure
+ Sockets programming in Python https://www.ibm.com/developerworks/linux/tutorials/l-pysocks/
+ Google Python Style Guide https://google.github.io/styleguide/pyguide.html
+ Dive Into Python 3 http://www.diveintopython3.net/index.html
** Hubs
+ https://github.com/pcsforeducation/Sysadmin-scripts
+ https://github.com/vinta/awesome-python
** IRCs
+ #python-unregistered was created on 2011-02-06 00:12:29
